@use 'mixins' as *;

.form {
    label {
        display: block;
        font-weight: 500;
    }

    input:not([type='checkbox'], [type='radio']),
    select,
    textarea {
        height: 2.25rem;
        margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: 1rem;
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
        @include transitionColors();
        padding-top: 0.25rem;
        padding-bottom: 0.25rem;
        padding-left: 0.75rem;
        padding-right: 0.75rem;
        background-color: transparent;
        border-color: hsl(var(--input));
        border-width: 1px;
        border-radius: calc(var(--radius) - 2px);
        width: 100%;
        font-size: 0.875rem;
        line-height: 1.25rem;

        &:focus {
            border-color: hsl(var(--primary));
        }

        &::placeholder {
            font-weight: 500;
            color: hsl(var(--muted-foreground));
        }

        &:disabled {
            opacity: .5;
            cursor: not-allowed;
        }
    }

    textarea {
        height: auto;
        min-height: 2.25rem;
        resize: vertical;
    }

    select {
        option {
            background-color: hsl(var(--background));
            color: hsl(var(--foreground));
        }
    }

    input[type='checkbox'],
    input[type='radio'] {
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
        border-color: hsl(var(--primary));
        border-width: 1px;
        border-radius: calc(var(--radius) - 4px);
        flex-shrink: 0;
        width: 1rem;
        height: 1rem;
        cursor: pointer;
        background: hsl(var(--background));
        position: relative;

        &:focus {
            border-color: hsl(var(--primary));
        }

        &:checked {
            background-color: hsl(var(--primary));

            &:after {
                @include icon('\f00c');
                position: absolute;
                color: hsl(var(--background));
                font-size: 0.75rem;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }
        }

        &:disabled {
            opacity: .5;
            cursor: not-allowed;
        }

        &[type='radio'] {
            border-radius: 100%;

            &::after {
                display: none;
            }
        }
    }

    input[type='file'] {
        cursor: pointer;

        &::file-selector-button {
            background: hsl(var(--background));
            color: hsl(var(--foreground));
            appearance: none;
            border: none;
            padding: 0.25rem;
            font-family: inherit;
            font-weight: 500;
            cursor: pointer;
        }
    }

    input[type='date'] {
        &::-webkit-calendar-picker-indicator {
            color: hsl(var(--foreground));
            cursor: pointer;
        }
    }

    .checkbox {
        margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: 1rem;
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        align-items: center;

        input:disabled+label {
            opacity: .7;
            cursor: not-allowed;
        }

        label {
            font-size: 0.875rem;
            line-height: 1.25rem;
            font-weight: 500;
            cursor: pointer;
        }
    }
}